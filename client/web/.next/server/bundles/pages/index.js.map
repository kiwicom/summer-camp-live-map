{"version":3,"file":"bundles/pages/index.js","sources":["webpack:///webpack/bootstrap 4f33329fcbe5cf7b1a7d","webpack:///components/BlogPostPreview.js","webpack:///components/BlogPosts.js","webpack:///lib/RelayProvider.js","webpack:///lib/createRelayEnvironment.js","webpack:///lib/withData.js","webpack:///pages/index.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-relay\"","webpack:///external \"relay-runtime\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4f33329fcbe5cf7b1a7d","import React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nconst BlogPostPreview = props => {\n  return (\n    <div key={props.post.id}>{props.post.title}</div>\n  )\n}\n\nexport default createFragmentContainer(BlogPostPreview, {\n  post: graphql`\n        fragment BlogPostPreview_post on BlogPost {\n            id\n            title\n        }\n    `\n})\n\n\n\n// WEBPACK FOOTER //\n// components/BlogPostPreview.js","import React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\nimport BlogPostPreview from './BlogPostPreview'\n\nconst BlogPosts = props => {\n  return (\n    <div>\n      <h1>Blog posts</h1>\n      {props.viewer.allBlogPosts.edges.map(({ node }) =>\n        <BlogPostPreview key={node.id}post={node} />\n      )}\n    </div>\n  )\n}\n\nexport default createFragmentContainer(BlogPosts, {\n  viewer: graphql`\n        fragment BlogPosts_viewer on Viewer {\n            allBlogPosts(first: 10, orderBy: createdAt_DESC) {\n                edges {\n                    node {\n                        ...BlogPostPreview_post\n                        id\n                    }\n                }\n            }\n        }\n    `\n})\n\n\n\n// WEBPACK FOOTER //\n// components/BlogPosts.js","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Thank you https://github.com/robrichard\n// https://github.com/robrichard/relay-context-provider\n\nclass RelayProvider extends React.Component {\n  getChildContext () {\n    return {\n      relay: {\n        environment: this.props.environment,\n        variables: this.props.variables\n      }\n    }\n  }\n  render () {\n    return this.props.children\n  }\n}\n\nRelayProvider.childContextTypes = {\n  relay: PropTypes.object.isRequired\n}\n\nRelayProvider.propTypes = {\n  environment: PropTypes.object.isRequired,\n  variables: PropTypes.object.isRequired,\n  children: PropTypes.node\n}\n\nexport default RelayProvider\n\n\n\n// WEBPACK FOOTER //\n// lib/RelayProvider.js","import { Environment, Network, RecordSource, Store } from 'relay-runtime'\nimport fetch from 'isomorphic-unfetch'\n\nlet relayEnvironment = null\n\n// Define a function that fetches the results of an operation (query/mutation/etc)\n// and returns its results as a Promise:\nfunction fetchQuery (\n  operation,\n  variables,\n  cacheConfig,\n  uploadables,\n) {\n  return fetch(process.env.RELAY_ENDPOINT, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }, // Add authentication and other headers here\n    body: JSON.stringify({\n      query: operation.text, // GraphQL text from input\n      variables\n    })\n  }).then(response => response.json())\n}\n\nexport default function initEnvironment ({ records = {} } = {}) {\n  // Create a network layer from the fetch function\n  const network = Network.create(fetchQuery)\n  const store = new Store(new RecordSource(records))\n\n  // Make sure to create a new Relay environment for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!process.browser) {\n    return new Environment({\n      network,\n      store\n    })\n  }\n\n  // reuse Relay environment on client-side\n  if (!relayEnvironment) {\n    relayEnvironment = new Environment({\n      network,\n      store\n    })\n  }\n\n  return relayEnvironment\n}\n\n\n\n// WEBPACK FOOTER //\n// lib/createRelayEnvironment.js","import React from 'react'\nimport initEnvironment from './createRelayEnvironment'\nimport { fetchQuery } from 'react-relay'\nimport RelayProvider from './RelayProvider'\n\nexport default (ComposedComponent, options = {}) => {\n  return class WithData extends React.Component {\n    static displayName = `WithData(${ComposedComponent.displayName})`\n\n    static async getInitialProps (ctx) {\n      // Evaluate the composed component's getInitialProps()\n      let composedInitialProps = {}\n      if (ComposedComponent.getInitialProps) {\n        composedInitialProps = await ComposedComponent.getInitialProps(ctx)\n      }\n\n      let queryProps = {}\n      let queryRecords = {}\n      const environment = initEnvironment()\n\n      if (options.query) {\n        // Provide the `url` prop data in case a graphql query uses it\n        // const url = { query: ctx.query, pathname: ctx.pathname }\n        const variables = {}\n        // TODO: Consider RelayQueryResponseCache\n        // https://github.com/facebook/relay/issues/1687#issuecomment-302931855\n        queryProps = await fetchQuery(environment, options.query, variables)\n        queryRecords = environment.getStore().getSource().toJSON()\n      }\n\n      return {\n        ...composedInitialProps,\n        ...queryProps,\n        queryRecords\n      }\n    }\n\n    constructor (props) {\n      super(props)\n      this.environment = initEnvironment({\n        records: props.queryRecords\n      })\n    }\n\n    render () {\n      return (\n        <RelayProvider environment={this.environment} variables={{}}>\n          <ComposedComponent {...this.props} />\n        </RelayProvider>\n      )\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// lib/withData.js","import React, { Component } from 'react'\nimport { graphql } from 'react-relay'\nimport withData from '../lib/withData'\nimport BlogPosts from '../components/BlogPosts'\n\nclass Index extends Component {\n  static displayName = `Index`\n\n  render (props) {\n    return (\n      <div>\n        <BlogPosts viewer={this.props.viewer} />\n      </div>\n    )\n  }\n}\n\nexport default withData(Index, {\n  query: graphql`\n        query pages_indexQuery {\n            viewer {\n                ...BlogPosts_viewer\n            }\n        }\n    `\n})\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js","module.exports = require(\"@babel/runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/regenerator\"\n// module id = @babel/runtime/regenerator\n// module chunks = 3","module.exports = require(\"isomorphic-unfetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-unfetch\"\n// module id = isomorphic-unfetch\n// module chunks = 3","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = prop-types\n// module chunks = 3","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 3","module.exports = require(\"react-relay\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-relay\"\n// module id = react-relay\n// module chunks = 3","module.exports = require(\"relay-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"relay-runtime\"\n// module id = relay-runtime\n// module chunks = 3"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AADA;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;;;AACA;AACA;AACA;;;;AAXA;AACA;AAaA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AAAA;AACA;AAFA;AANA;AAUA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAUA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AAEA;AACA;AApBA;AAAA;AACA;AADA;AAoBA;AACA;AACA;AAtBA;AAAA;AA2BA;AA3BA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AA8BA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;AArCA;AAAA;AAAA;AAuCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AA5CA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AATA;AACA;AADA;;;;;;AAYA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AADA;;;;;;;;;;;;;;;ACjBA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}